{"version":3,"sources":["main.js","images/altarpterio.png","images/bettyb.png","images/iqrivas.jfif","App.js","serviceWorker.js","index.js"],"names":["handleTab","ev","activeTab","document","getElementsByClassName","activePanel","inicio","getElementById","exp","proj","contacto","clickedTab","currentTarget","classList","add","remove","id","handleEmail","preventDefault","hidden","querySelector","email","getAttribute","replace","innerHTML","setAttribute","App","className","onClick","src","iqrivas","alt","bettyb","href","target","rel","altarpterio","data-email","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iPAAO,SAASA,EAAWC,GACzB,IAAIC,EAAYC,SAASC,uBAAuB,uBAC5CC,EAAcF,SAASC,uBAAuB,eAC9CE,EAASH,SAASI,eAAe,gBACjCC,EAAML,SAASI,eAAe,qBAC9BE,EAAON,SAASI,eAAe,mBAC/BG,EAAWP,SAASI,eAAe,kBACnCI,EAAaV,EAAGW,cAEpBV,EAAU,GAAGW,UAAUC,IAAI,eAC3BZ,EAAU,GAAGW,UAAUE,OAAO,uBAC9BJ,EAAWE,UAAUC,IAAI,uBACzBH,EAAWE,UAAUE,OAAO,eAE5BV,EAAY,GAAGQ,UAAUC,IAAI,uBAC7BT,EAAY,GAAGQ,UAAUE,OAAO,eAEV,WAAlBJ,EAAWK,KACbV,EAAOO,UAAUC,IAAI,eACrBR,EAAOO,UAAUE,OAAO,wBAGJ,gBAAlBJ,EAAWK,KACbR,EAAIK,UAAUC,IAAI,eAClBN,EAAIK,UAAUE,OAAO,wBAGD,cAAlBJ,EAAWK,KACbP,EAAKI,UAAUC,IAAI,eACnBL,EAAKI,UAAUE,OAAO,wBAGF,aAAlBJ,EAAWK,KACbN,EAASG,UAAUC,IAAI,eACvBJ,EAASG,UAAUE,OAAO,wBAIvB,SAASE,EAAahB,GAE3BA,EAAGiB,iBACH,IAAIC,EAAShB,SAASiB,cAAc,eACpC,GAAID,EAAQ,CACV,IAAIE,EAAQF,EACTG,aAAa,cACbC,QAAQ,MAAO,KACfA,QAAQ,MAAO,KAClBJ,EAAON,UAAUE,OAAO,cACxBI,EAAOK,UAAYH,EACnBF,EAAOM,aAAa,OAAQ,UAAYJ,ICjD7B,UAA0B,wCCA1B,MAA0B,mCCA1B,MAA0B,qCCkE1BK,MA1Df,WACE,OACE,yBAAKC,UAAU,OACb,yBAAKX,GAAG,OAAOW,UAAU,QACvB,wBAAIX,GAAG,SAASW,UAAU,0BAA0BC,QAAS5B,GAA7D,UACA,wBAAIgB,GAAG,cAAcW,UAAU,kBAAkBC,QAAS5B,GAA1D,eACA,wBAAIgB,GAAG,YAAYW,UAAU,kBAAkBC,QAAS5B,GAAxD,aACA,wBAAIgB,GAAG,WAAWW,UAAU,kBAAkBC,QAAS5B,GAAvD,aAGF,6BAAS2B,UAAU,QACjB,yBAAKX,GAAG,eAAeW,UAAU,eAC/B,yBAAKA,UAAU,YAAYE,IAAKC,EAASC,IAAI,kBAC7C,yBAAKJ,UAAU,0BAAf,+BACA,yBAAKA,UAAU,0BAAf,yIAKF,yBAAKX,GAAG,oBAAoBW,UAAU,uBACpC,yBAAKA,UAAU,mBAAf,oCACA,yBAAKA,UAAU,mBAAf,mCACA,yBAAKA,UAAU,mBAAf,2CACA,yBAAKA,UAAU,mBAAf,oCACA,yBAAKA,UAAU,mBAAf,0CAEF,yBAAKX,GAAG,kBAAkBW,UAAU,uBAClC,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,eAAeE,IAAKG,EAAQD,IAAI,qBAC7C,uBAAGE,KAAK,+BAA+BC,OAAO,SAASC,IAAI,cAA3D,kBAIF,yBAAKR,UAAU,mBACb,yBAAKA,UAAU,eAAeE,IAAKO,EAAaL,IAAI,6BACpD,uBAAGE,KAAK,0CAA0CC,OAAO,SAASC,IAAI,cAAtE,wBAKJ,yBAAKnB,GAAG,iBAAiBW,UAAU,uBACjC,yBAAKA,UAAU,mBACb,uBAAGM,KAAK,uCAAuCC,OAAO,SAASC,IAAI,cAAnE,aAIF,yBAAKR,UAAU,mBACb,uBAAGM,KAAK,IAAIN,UAAU,aAAaU,aAAW,wBAAwBF,IAAI,aAAaP,QAASX,GAAhG,cC3CQqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASzC,SAASI,eAAe,SD6H3C,kBAAmBsC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.93f6b425.chunk.js","sourcesContent":["export function handleTab (ev) {\n  let activeTab = document.getElementsByClassName(\"tabs__title--active\");\n  let activePanel = document.getElementsByClassName(\"main__panel\");\n  let inicio = document.getElementById(\"inicio_panel\");\n  let exp = document.getElementById(\"experiencia_panel\");\n  let proj = document.getElementById(\"proyectos_panel\");\n  let contacto = document.getElementById(\"contacto_panel\");\n  let clickedTab = ev.currentTarget;\n\n  activeTab[0].classList.add(\"tabs__title\");\n  activeTab[0].classList.remove(\"tabs__title--active\");\n  clickedTab.classList.add(\"tabs__title--active\");\n  clickedTab.classList.remove(\"tabs__title\");\n\n  activePanel[0].classList.add(\"main__panel--hidden\");\n  activePanel[0].classList.remove(\"main__panel\");\n\n  if (clickedTab.id === \"inicio\") {\n    inicio.classList.add(\"main__panel\");\n    inicio.classList.remove(\"main__panel--hidden\");\n  }\n\n  if (clickedTab.id === \"experiencia\") {\n    exp.classList.add(\"main__panel\");\n    exp.classList.remove(\"main__panel--hidden\");\n  }\n\n  if (clickedTab.id === \"proyectos\") {\n    proj.classList.add(\"main__panel\");\n    proj.classList.remove(\"main__panel--hidden\");\n  }\n\n  if (clickedTab.id === \"contacto\") {\n    contacto.classList.add(\"main__panel\");\n    contacto.classList.remove(\"main__panel--hidden\");\n  }\n};\n\nexport function handleEmail (ev) {\n  \n  ev.preventDefault();\n  let hidden = document.querySelector(\".hiddenMail\");\n  if (hidden) {\n    let email = hidden\n      .getAttribute(\"data-email\")\n      .replace(/ARR/, \"@\")\n      .replace(/PUN/, \".\");\n    hidden.classList.remove(\"hiddenMail\");\n    hidden.innerHTML = email;\n    hidden.setAttribute(\"href\", \"mailto:\" + email);\n  }\n};\n\n","export default __webpack_public_path__ + \"static/media/altarpterio.af886e9e.png\";","export default __webpack_public_path__ + \"static/media/bettyb.47a07a57.png\";","export default __webpack_public_path__ + \"static/media/iqrivas.7c2c2aee.jfif\";","import React from 'react';\nimport './App.css';\nimport './css/main.css';\nimport {handleTab, handleEmail} from './main.js';\nimport altarpterio from './images/altarpterio.png';\nimport bettyb from './images/bettyb.png';\nimport iqrivas from './images/iqrivas.jfif';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav id=\"tabs\" className=\"tabs\">\n        <li id=\"inicio\" className=\"tabs__title--active tab\" onClick={handleTab} >Inicio</li>\n        <li id=\"experiencia\" className=\"tabs__title tab\" onClick={handleTab} >Experiencia</li>\n        <li id=\"proyectos\" className=\"tabs__title tab\" onClick={handleTab} >Proyectos</li>\n        <li id=\"contacto\" className=\"tabs__title tab\" onClick={handleTab} >Contacto</li>\n      </nav>\n\n      <section className=\"main\">\n        <div id=\"inicio_panel\" className=\"main__panel\">\n          <img className=\"main__img\" src={iqrivas} alt=\"Denisse Rivas\"/>\n          <div className=\"main__panelcard--intro\">¡Hola! Soy Denisse Rivas</div>\n          <div className=\"main__panelcard--intro\">\n            Mi carrera profesional se resume en resolver problemas a través del\n            análisis de los requerimientos y el aprendizaje constante.\n          </div>\n        </div>\n        <div id=\"experiencia_panel\" className=\"main__panel--hidden\">\n          <div className=\"main__panelcard\">2020: Salesforce Admin/Developer</div>\n          <div className=\"main__panelcard\">2019: Desarrollo Web (JS Stack)</div>\n          <div className=\"main__panelcard\">2014 - 2019: Planeación Logística</div>\n          <div className=\"main__panelcard\">2010 - 2014: Servicio al Cliente</div>\n          <div className=\"main__panelcard\">2004 - 2010: Ingeniería Química</div>\n        </div>\n        <div id=\"proyectos_panel\" className=\"main__panel--hidden\">\n          <div className=\"main__panelcard\">\n          <img className=\"project__img\" src={bettyb} alt=\"Proyecto Betty B\"/>\n            <a href=\"https://www.bettybarreto.com\" target=\"_blank\" rel=\"noreferrer\">\n              Betty Barreto\n            </a>\n          </div>\n          <div className=\"main__panelcard\">\n            <img className=\"project__img\" src={altarpterio} alt=\"Proyecto Altar de Pterio\"/>\n            <a href=\"https://iqrivas.github.io/altardepterio\" target=\"_blank\" rel=\"noreferrer\">\n              El Altar de Pterio\n            </a>\n          </div>\n        </div>\n        <div id=\"contacto_panel\" className=\"main__panel--hidden\">\n          <div className=\"main__panelcard\">\n            <a href=\"https://www.linkedin.com/in/iqrivas/\" target=\"_blank\" rel=\"noreferrer\">\n              LinkedIn\n            </a>\n          </div>\n          <div className=\"main__panelcard\">\n            <a href=\"#\" className=\"hiddenMail\" data-email=\"iqrivasARRgmailPUNcom\" rel=\"noreferrer\" onClick={handleEmail}>\n              Email\n            </a>\n          </div>\n        </div>\n      </section>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}